#this code base on requirement of task
'''Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that the user guessed correctly in the correct place, they have a “cow”. For every digit the user guessed correctly in the wrong place is a “bull.” Every time the user makes a guess, tell them how many “cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user makes throughout teh game and tell the user at the end.

Say the number generated by the computer is 1038. An example interaction could look like this:
Welcome to the Cows and Bulls Game!
Enter a number:
>>> 1234
2 cows, 0 bulls
>>> 1356
1 cow, 1 bull
...
Until the user guesses the number. 
'''
import random
def CowBull():
    try:
        count = 0
        secret = []
        # generate random 4 unique digit
        while len(secret)<4:
            randoms = random.randint(0,9)
            if randoms not in secret:
                secret.append(randoms)
        print("secret", secret)
        while True:
            #validation 
            guess = input("Please enter a four-digit number: ")
            if not guess.isdigit():
                print("please Enter only Digit")
                continue
            if len(guess) != 4:
                print("Please Enter Only 4 Digit")
                continue

            guess_list = []
            cow = 0
            bull = 0
            for i in guess:
                guess_list.append(int(i))

            for i in range(0,4):
                if guess_list[i] == secret[i]:
                    cow += 1
                elif guess_list[i] in secret:
                    bull += 1

            print(f"{cow} cow, {bull} bull")
            count += 1
            if cow == 4:
                print(f'number generated by the computer is {secret}')
                print('You Won')
                print('Count Of Try :',count)
                break
            
    except Exception as e:
        print(str(e))
CowBull()